<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AADUGf8Higrtby0zUHgAAAAASUVORK5CYII=
</value>
  </data>
</root>